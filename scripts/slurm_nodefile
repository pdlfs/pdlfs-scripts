#!/usr/bin/env perl

#
# Copyright (c) 2019 Carnegie Mellon University,
# Copyright (c) 2019 Triad National Security, LLC, as operator of
#     Los Alamos National Laboratory.
#
# All rights reserved.
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file. See the AUTHORS file for names of contributors.
#

#
# slurm_nodefile  generate a nodefile under slurm
# 19-Apr-2019  chuck@ece.cmu.edu
#
# XXX: slurm comes with contribs/torque/generate_pbs_nodefile.pl
# but it may not actually be installed (as it is contrib, not core
# slurm).  instead of using that, let's use "sinfo" to generate
# a node file in the format we want.
#
# sinfo -h -a -N -S N -o %N -n $SLURM_NODELIST
#   >> no header, all partitions, node format, node sort, just node output
#   we do a uniq to combine nodes listed in mutiple partitions into one
#   entry...
#

use strict;

my($outfile) = @ARGV;
die "usage: slurm_nodefile [output-file]" unless ($outfile ne "");
die "error: required SLURM_NODELIST env var not provided"
    unless (defined($ENV{'SLURM_NODELIST'}));

my($cmd, $fh, @nodes, $result);
$cmd = sprintf "sinfo -h -a -N -S N -o '%%N' -n '%s'", $ENV{'SLURM_NODELIST'};
open($fh, "$cmd |") || die "Cannot open sinfo pipe";

while (<$fh>) {
    push(@nodes, $_) if ($#nodes == -1 ||
                         $nodes[$#nodes] ne $_);   # uniq
}

$result = join("", @nodes);
open(OUTPUT, ">$outfile") || die "cannot open $outfile ($!)";
die "write error ($!)" if (!print(OUTPUT $result) || !close(OUTPUT));
exit(0);
